// Define the routing code or where to dispatch things of different types to.
// This is done using macros and templates because writing this by hand is a
// major pain in the ass
BeginCustomDispatch(TerminatorInst, env, inst)
	CondDispatch(BranchInst, env, inst);
	CondDispatch(IndirectBrInst, env, inst);
	CondDispatch(InvokeInst, env, inst);
	CondDispatch(ResumeInst, env, inst);
	CondDispatch(ReturnInst, env, inst);
	CondDispatch(SwitchInst, env, inst);
	CondDispatch(UnreachableInst, env, inst);
EndCustomDispatch(TerminatorInst, env, inst)

BeginCustomDispatch(UnaryInstruction, env, inst) 
	CondDispatch(AllocaInst, env, inst);
	CondDispatch(CastInst, env, inst);
	CondDispatch(ExtractValueInst, env, inst);
	CondDispatch(LoadInst, env, inst);
	CondDispatch(VAArgInst, env, inst);
EndCustomDispatch(UnaryInstruction, env, inst)

BeginCustomDispatch(CmpInst, env, inst)
	CondDispatch(FCmpInst, env, inst);
	CondDispatch(ICmpInst, env, inst);
EndCustomDispatch(CmpInst, env, inst)

BeginCustomDispatch(Instruction, env, inst)
	CondDispatch(PHINode, env, inst);
	CondDispatch(StoreInst, env, inst);
	CondDispatch(BinaryOperator, env, inst);
	CondDispatch(CallInst, env, inst);
	CondDispatch(CmpInst, env, inst);
	CondDispatch(ExtractElementInst, env, inst);
	CondDispatch(FenceInst, env, inst);
	CondDispatch(GetElementPtrInst, env, inst);
	CondDispatch(InsertElementInst, env, inst);
	CondDispatch(InsertValueInst, env, inst);
	CondDispatch(LandingPadInst, env, inst);
	CondDispatch(SelectInst, env, inst);
	CondDispatch(ShuffleVectorInst, env, inst);
	CondDispatch(TerminatorInst, env, inst);
	CondDispatch(UnaryInstruction, env, inst);
EndCustomDispatch(Instruction, env, inst)

BeginCustomDispatch(User, env, inst) 
	CondDispatch(Instruction, env, inst);
	CondDispatch(Constant, env, inst);
	CondDispatch(Operator, env, inst);
EndCustomDispatch(User, env, inst)

BeginCustomDispatch(Value, env, inst)
	CondDispatch(User, env, inst);
	CondDispatch(BasicBlock, env, inst);
	CondDispatch(Argument, env, inst);
	// CondDispatch(InlineAsm, env, value);
	// CondDispatch(MDNode, env, value);
	// CondDispatch(MDString, env, value);
EndCustomDispatch(Value, env, inst)

BeginCustomDispatch(CastInst, env, inst)
	CondDispatch(AddrSpaceCastInst, env, inst);
	CondDispatch(BitCastInst, env, inst);
	CondDispatch(FPExtInst, env, inst);
	CondDispatch(FPToSIInst, env, inst);
EndCustomDispatch(CastInst, env, inst)

//TODO: Finish defining this custom dispatch at some point
//BeginCustomDispatch(IntrinsicInst, env, inst)
//	CondDispatch(DbgInfoIntrinsic, env, inst);
//	Otherwise(IntrinsicInst, env, inst);
//EndCustomDispatch

BeginCustomDispatch( CallInst, env, inst)
	CondDispatch(IntrinsicInst, env, inst);
EndCustomDispatch(CallInst, env, inst)

BeginCustomDispatch(SequentialType, env, inst);
	CondDispatch(ArrayType, env, inst);
	CondDispatch(PointerType, env, inst);
	CondDispatch(VectorType, env, inst);
EndCustomDispatch(SequentialType, env, inst)

BeginCustomDispatch(CompositeType, env, inst)
	CondDispatch(StructType, env, inst);
	CondDispatch(SequentialType, env, inst);
EndCustomDispatch(CompositeType, env, inst)

BeginCustomDispatch(Type, env, inst)
	CondDispatch(FunctionType, env, inst);
	CondDispatch(IntegerType, env, inst);
	CondDispatch(CompositeType, env, inst);
EndCustomDispatch(Type, env, inst)
